import java.util.HashSet;
import java.util.Set;

public class CommonAlphabets {

    public static int getSingleDigitSum(int num) {
        while (num >= 10) {
            num = sumOfDigits(num);
        }
        return num;
    }

    private static int sumOfDigits(int num) {
        int sum = 0;
        while (num > 0) {
            sum += num % 10;
            num /= 10;
        }
        return sum;
    }

    public static int getCommonAsciiSum(char[] input1, char[] input2) {
        Set<Character> commonChars = new HashSet<>();
        
        Set<Character> set1 = new HashSet<>();
        Set<Character> set2 = new HashSet<>();
        
        for (char c : input1) set1.add(c);
        for (char c : input2) set2.add(c);
        
        for (char c : set1) {
            if (set2.contains(c)) {
                commonChars.add(c);
            }
        }
        
        int sum = 0;
        for (char c : commonChars) {
            sum += (int) c;
        }
        
        return getSingleDigitSum(sum);
    }

    public static void main(String[] args) {
        char[] input1 = {'a', 'b', 'c'};
        char[] input2 = {'b', 'c'};
        
        int result = getCommonAsciiSum(input1, input2);
        
        System.out.println(result);
    }
}
